#include <stdio.h>
#define MAX_SIZE 100
void insertElement(int arr[], int *size, int element, int position) {
    if (*size >= MAX_SIZE) {
        printf("Array is full. Insertion failed.\n");
        return;
    }

    if (position < 0 || position > *size) {
        printf("Invalid position for insertion.\n");
        return;
    }

    for (int i = *size - 1; i >= position; i--) {
        arr[i + 1] = arr[i];
    }

    arr[position] = element;
    (*size)++;
}

void deleteElement(int arr[], int *size, int position) {
    if (*size <= 0) {
        printf("Array is empty. Deletion failed.\n");
        return;
    }

    if (position < 0 || position >= *size) {
        printf("Invalid position for deletion.\n");
        return;
    }

    for (int i = position; i < *size - 1; i++) {
        arr[i] = arr[i + 1];
    }

    (*size)--;
}

void displayArray(int arr[], int size) {
    printf("Array elements: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main() {
    int arr[MAX_SIZE];
    int size = 0, choice, element, position;

    while (1) {
        printf("\nArray Operations:\n");
        printf("1. Insert element\n");
        printf("2. Delete element\n");
        printf("3. Display array\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter the element to insert: ");
                scanf("%d", &element);
                printf("Enter the position to insert (0 to %d): ", size);
                scanf("%d", &position);
                insertElement(arr, &size, element, position);
                break;
            case 2:
                printf("Enter the position to delete (0 to %d): ", size - 1);
                scanf("%d", &position);
                deleteElement(arr, &size, position);
                break;
            case 3:
                displayArray(arr, size);
                break;
            case 4:
                printf("Exiting the program.\n");
                return 0;
            default:
                printf("Invalid choice. Please try again.\n");
                break;
        }
    }

    return 0;
}
output:
Array Operations:
1. Insert element
2. Delete element
3. Display array
4. Exit
Enter your choice: 1
Enter the element to insert: 5
Enter the position to insert (0 to 0): 0

Array Operations:
1. Insert element
2. Delete element
3. Display array
4. Exit
Enter your choice: 1
Enter the element to insert: 10
Enter the position to insert (0 to 1): 1

Array Operations:
1. Insert element
2. Delete element
3. Display array
4. Exit
Enter your choice: 1
Enter the element to insert: 15
Enter the position to insert (0 to 2): 1

Array Operations:
1. Insert element
2. Delete element
3. Display array
4. Exit
Enter your choice: 3
Array elements: 5 15 10

Array Operations:
1. Insert element
2. Delete element
3. Display array
4. Exit
Enter your choice: 2
Enter the position to delete (0 to 2): 0

Array Operations:
1. Insert element
2. Delete element
3. Display array
4. Exit
Enter your choice: 3
Array elements: 15 10

Array Operations:
1. Insert element
2. Delete element
3. Display array
4. Exit
Enter your choice: 4
